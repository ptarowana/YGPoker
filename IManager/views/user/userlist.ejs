
<head>
    
</head>


<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">회원 관리</a></li>
                    <li class="breadcrumb-item active">회원 리스트</li>
                </ol>
            </div>
            <h4 class="page-title">회원 리스트</h4>
        </div>
    </div>
</div>
<!-- end page title -->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-sm-2">
                        <a href="javascript:void(0);" class="btn btn-danger mb-2 CreateUserButton"><i class="mdi mdi-plus-circle mr-2"></i> 회원 등록</a>
                    </div>
                    <div class="col-sm-3">
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-secondary active">
                                <input type="radio" name="UserTypeFilter" value="" checked />전체
                            </label>
                            <label class="btn btn-secondary">
                                <input type="radio" name="UserTypeFilter" value="NORMAL" />정상
                            </label>
                            <label class="btn btn-secondary">
                                <input type="radio" name="UserTypeFilter" value="BLOCK" />정지
                            </label>
                            <label class="btn btn-secondary">
                                <input type="radio" name="UserTypeFilter" value="QUIT" />탈퇴
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" for="searchText">
                                    ID/이름
                                </span>
                            </div>
                            <input type="text" id="searchText" name="searchText" maxlength="20" class="form-control" />
                            <div class="input-group-append">
                                <button class="form-control" id="SearchTextFindButton">검색</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-7">
                        <div class="text-sm-right">
                            <!--
                            <button type="button" class="btn btn-success mb-2 mr-1"><i class="mdi mdi-settings"></i></button>
                            <button type="button" class="btn btn-light mb-2">Export</button>
                                -->
                        </div>
                    </div><!-- end col-->
                </div>

                <div class="table-responsive">
                    <table id="user-datatable" class="table table-sm table-hover dt-responsive nowrap w-100">
                        <thead>
                            <tr>
                                <th>색인</th>
                                <th>아이디</th>
                                <th>닉네임</th>
                                <th>매장 ID</th>
                                <th>총판 ID</th>
                                <th>부지사 ID</th>
                                <th>지사 ID</th>
                                <th>본사 ID</th>
                                <th>이름</th>
                                <th>구분</th>
                                <th>이메일</th>
                                <th>상태</th>
                                <th>포인트</th>
                                <th>캐시</th>
                                <th>모바일</th>
                                <th>등록일</th>
                                <th>동작</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div> <!-- end card-body-->
        </div> <!-- end card-->
    </div> <!-- end col -->

    <div class="modal fade task-modal-content" id="BuildUserDialog" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="NewTaskModalLabel">회원 생성 / 수정</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div>
                <div class="modal-body">
                        <!-- <form class="p-2" id="UserForm" method="POST" action="/agent/register"> -->
                        <input type="hidden" name="id" id="uid" value="" />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">매장 아이디</label>
                                    <input type="text" class="form-control date" id="strShopID" name="strShopID">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>배송 유형</label>
                                    <select class="form-control form-control-light" name="eInoutType" id="eInoutType">
                                        <option value="GIVE">지급</option>
                                        <option value="TAKE">차감</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="task-priority2">배송 금액</label>
                                    <div class="input-group mb-6">
                                        <input type="text" id="iInputAmount" name="iInputAmount" maxlength="20" class="form-control" value="0"/>
                                        <div class="input-group-append">
                                            <button class="form-control" onclick="RequestInout();">배송</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                                <div class="form-group">
                                    <label for="task-priority2">배송 금액 설정</label>
                                        <div class="text-right" style="text-align:center;">
                                            <button type="button" style="width:100px;" class="btn btn-primary" onclick="AddInput(10000);">+10,000</button>
                                            <button type="button" style="width:100px;" class="btn btn-primary" onclick="AddInput(30000);">+30,000</button>
                                            <button type="button" style="width:100px;" class="btn btn-primary" onclick="AddInput(50000);">+50,000</button>
                                            <button type="button" style="width:100px;" class="btn btn-primary" onclick="AddInput(100000);">+100,000</button>
                                            <button type="button" style="width:100px;" class="btn btn-primary" onclick="AddInput(500000);">+500,000</button>
                                            <button type="button" style="width:100px;" class="btn btn-light" onclick="AddInput(0);">정정</button>
                                        </div>
                                </div>

                        <div class="form-group">
                            <label>회원 상태</label>
                            <select class="form-control form-control-light" name="eStatus" id="eStatus">
                                <option value="NORMAL" selected>정상</option>
                                <option value="BLOCK">차단</option>
                                <option value="QUIT">탈퇴</option>
                            </select>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="task-priority2">아이디</label>
                                    <div class="input-group mb-3">
                                        <input type="text" id="strID" name="strID" maxlength="20" class="form-control" />
                                        <div class="input-group-append">
                                            <button class="form-control" onclick="RequestCheckID();">중복확인</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="task-priority2">로그인 비밀번호</label>
                                    <input type="password" class="form-control form-control-light" id="strPassword" name="strPassword" placeholder="로그인 비밀번호">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="task-priority2">닉네임</label>
                                    <div class="input-group mb-3">
                                        <input type="text" id="strNickname" name="strNickname" maxlength="20" class="form-control" />
                                        <div class="input-group-append">
                                            <button class="form-control" onclick="RequestCheckNickname();">중복확인</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">예금주명</label>
                                    <input type="text" class="form-control date" id="strName" name="strName" placeholder="">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">은행명</label>
                                    <input type="text" class="form-control date" id="strDesc" name="strDesc" placeholder="">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">계좌번호</label>
                                    <input type="text" class="form-control date" id="strAccount" name="strAccount" placeholder="">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">포인트</label>
                                    <input type="text" class="form-control date" id="iPoint" name="iPoint" placeholder="">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="birthdatepicker">캐쉬</label>
                                    <input type="text" class="form-control date" id="iCash" name="iCash" placeholder="">
                                </div>
                            </div>
                        </div>

                        <div class="text-right">
                            <button type="button" class="btn btn-primary" onclick="RequestRegister();">저장</button>
                            <button type="button" class="btn btn-light" data-dismiss="modal">취소</button>
                        </div>
                    <!-- </form> -->
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

</div>
<!-- end row -->

<script type="text/javascript">

    var dataTableInstance;

    $(document).ready(function(){

        $("#birthdate").datepicker({
            format: 'yyyy-mm-dd',
            language: 'kr'
        });

        // 새 계정 생성
        $(".CreateUserButton").click(function (e) {
            e.preventDefault();

            $('#iInputAmount').val(0);
            $("#BuildUserDialog").modal("show");
        });

        // 테이블의 login id 컬럼 클릭 처리
        $(document).on("click", ".UserIdPopup", function (e) {
            e.preventDefault();

            $.ajax({
                //url: "@Url.Action("QueryUser")",
                url:"/user/request_userdetail",
                type:"POST",
                data: {
                    strID : $(this).attr("data-id")
                },
                dataType: "json",
                success: function (obj) {
                    if (obj.result == "OK") {

                        console.log(obj.data);

                        $("#uid").val(obj.data.id);
                        $("#strShopID").val(obj.data.strShopID);
                        $("#strID").val(obj.data.strID);
                        $("#strPassword").val(obj.data.strPassword);
                        $("#strNickname").val(obj.data.strNickname);
                        $("#eState").val(obj.data.eStatus);
                        $("#strDesc").val(obj.data.strDesc);
                        $("#strName").val(obj.data.strName);
                        $("#strAccount").val(obj.data.strAccount);
                        $("#iPoint").val(obj.data.iPoint);
                        $("#iCash").val(obj.data.iCash);
                        
                        $("#BuildUserDialog").modal("show");
                    } else {
                        alert(obj.reason);
                    }
                }, error: function () {
                    alert("조회 중 오류 발생");
                }
            });
        });

        // 결제 내역 팝업
        $("#user-datatable").on("click", ".PayHistoryButton", function (e) {
            e.preventDefault();

            var loginId = $(this).parent().parent().attr("data-loginId");

            //window.open("@Url.Action("PaymentHistory")?loginId=" + loginId, "_blank", "width = 700, height = 500");

            window.open("/account/history_cash/" + loginId, "_blank", "width = 700, height = 400");
        });

        // 포인트 내역 팝업
        $("#user-datatable").on("click", ".PointHistoryButton", function (e) {
            e.preventDefault();

            var loginId = $(this).parent().parent().attr("data-loginId");

            window.open("/account/history_point/" + loginId, "_blank", "width = 700, height = 400");
        });
        // EXP 내역 팝업
        $("#user-datatable").on("click", ".ExpHistoryButton", function (e) {
            e.preventDefault();

            var loginId = $(this).parent().parent().attr("data-loginId");
            //window.open("@Url.Action("ExpHistory")?loginId=" + loginId, "_blank", "width = 700, height = 400");
            
            window.open("/account/history_exp/" + loginId, "_blank", "width = 700, height = 400");
        });
        // 아이템 내역 팝업
        $("#user-datatable").on("click", ".ItemHistoryButton", function (e) {
            e.preventDefault();

            var loginId = $(this).parent().parent().attr("data-loginId");
            //window.open("@Url.Action("ItemHistory")?loginId=" + loginId, "_blank", "width = 700, height = 400");

            console.log(loginId);
            
        });
        // 게시글 내역 팝업
        $("#user-datatable").on("click", ".ArticlesButton", function (e) {
            e.preventDefault();

            var loginId = $(this).parent().parent().attr("data-loginId");

            console.log(loginId);
            //location.href="@Url.Action("Index", "Bulletin")?author=" + loginId;
            
        });

        // 탈퇴 버튼 클릭
        $("#user-datatable").on("click", ".QuitButton", function (e) {
            e.preventDefault();

            var id = $(this).parent().parent().attr("data-id");
            var strID = $(this).parent().parent().attr("data-loginId");

            console.log(strID);
            // var id = $(this).parent().attr("data-id");
            // var loginId = $(this).parent().attr("data-loginId");

            // console.log($(this).parent().parent());

            // //alert(id);

            //if (!confirm(loginId + "계정을 탈퇴 처리 하시겠습니까?"))
            if (!confirm(strID + "계정을 탈퇴 처리 하시겠습니까?"))
                return;

            $.ajax({
                //url: "@Url.Action("QuitUser")",
                type:"POST",
                url:"/user/request_userleave",
                data: {
                    "id": id,
                    "strID": strID
                },
                dataType: "json",
                type: "POST",
                success: function (obj) {
                    if (obj.result == "OK") {
                        alert("탈퇴 처리되었습니다");
                        dataTableInstance.ajax.reload();
                        return;
                    } else {
                        alert(obj.reason);
                    }
                },
                error: function () {
                    alert("탈퇴 처리 요청 중 오류");
                }
            });
            
        });

        // 사용자 구분
        $("input[name='UserTypeFilter']").change(function () {
            dataTableInstance.ajax.reload();
        });

        $("#SearchTextFindButton").click(function (e) {
            e.preventDefault();

            dataTableInstance.ajax.reload();
        });

        // 정보 수정 완료
        $("#UserFormSubmitButton").click(function (e) {
            e.preventDefault();

            $("#UserForm").ajaxSubmit({
                //url:"/account/user",
                dataType: "json",
                type : "POST",
                beforeSubmit: function () {

                },
                success: function (obj) {
                    if (obj.result == "OK") {
                        $("#BuildUserDialog").modal("hide");
                        dataTableInstance.ajax.reload();
                        return;
                    }
                    alert(obj.reason);
                },
                error: function () {
                    alert("서버 오류");
                }
            });
        });

        dataTableInstance = $('#user-datatable').DataTable({
            "serverSide": true,
            "searching": false,
            "ajax": {
                //url: "@Url.Action("UserList")",
                url:"/user/request_userlist",
                "type": "POST",
                "data": function (d) {
                    return $.extend({}, d, {
                        "userTypeFilter": $("input[name='UserTypeFilter']:checked").val(),
                        "search" : $("#searchText").val(),
                        "iClass" : 1,
                    });
                }
            },
            responsive : true,
            order: [[ 1, 'asc' ]],
            columns: [

                {
                    data: "id",
                    render: function (d, t) {
                        return d;// return "<input type='checkbox' name='chk' id='chk" + d + "' value='" + d + "' /><label for='chk" + d + "'>" + d + "</label>";
                    }
                },
                {
                    data: "strID",
                    render: function (d) {
                        return "<a href='#' class='UserIdPopup' data-id='" + d + "'>" + d + "</a>";
                    }
                },
                {
                    data: "strNickname", render: function (d, t, row) {
                        var label = d;
                        if (row.userType == "TEST")
                            label = label + '<i class="far fa-grimace"></i>';
                        else if (row.userType == "ADMIN")
                            label += '<i class="fas fa-users-cog"></i>';
                        return label;
                    }
                },
                { data:"lev5" },
                { data:"lev4" },
                { data:"lev3" },
                { data:"lev2" },
                { data:"lev1" },
                { data: "strName" },
                {
                    data: "iClass",
                    render: function (d, t, s, m) {
                        var text = "";
                        if (d == 0)
                            text = "본사";
                        else if (d == 1)
                            text = "총판";
                        else if (d == 5)
                            text = "회원";
                        return text;
                    }
                },
                { data: "strEMail" },
                {
                    data: "eStatus",
                    render: function (d, t, s, m) {
                        var text = "";
                        if (d == "BLOCK")
                            text = "잠김";
                        else if (d == "QUIT")
                            text = "탈퇴";
                        else
                            text = "정상";
                        return text;
                    }
                },
                {
                    data: "iPoint", render : (d)=> {
                        let i = parseInt(d);
                        return i.toLocaleString();
                    }
                },
                { 
                    data: "iCash", render : (d)=> {
                        let i = parseInt(d);
                        return i.toLocaleString();
                    }
                },
                { data: "strMobileNo" },
                {
                    data: "createdAt", render: function (d) {
                        let date = moment(d).format('YYYY-MM-DD HH:mm:ss');
                        return date;
                    }
                },
                {
                    data: null,
                    //data:"quit",
                    render: function (d, t) {
                        var html = "";
                        if(d.eStatus != "QUIT")
                        //if(d.userStatus != "QUIT")
                            html += "<a href='#' class='QuitButton' title='탈퇴'>X</a>";
                        return html;
                    }
                }
            ],
            keys: true,
            "language": {
                "paginate": {
                    "previous": "<i class='mdi mdi-chevron-left'>",
                    "next": "<i class='mdi mdi-chevron-right'>"
                },
                "info": "현재 페이지 _PAGE_/_PAGES_, 총 _TOTAL_ 건",
                "lengthMenu": "한 페이지 길이 _MENU_",
                "emptyTable": "조건에 맞는 데이터가 없습니다",
                "infoEmpty" : "표시할 데이터 없음"
            },
            "sort": false,
            "drawCallback": function () {
                $('.dataTables_paginate > .pagination').addClass('pagination-rounded');
            },
            createdRow: function (row, data) {
                $(row).attr("data-id", data.id);
                $(row).attr("data-loginId", data.strID);
                if (data.eStatus == "QUIT")
                    $(row).addClass("table-dark");

            }
        });
    });

    let RequestRegister = () => {

        const strPAdminID = $('#strPAdminID').val();

        const strID = $('#strID').val();
        const strNickname = $('#strNickname').val();
        const strPassword = $('#strPassword').val();
        const iPoint = $('#iPoint').val();
        const iCash = $('#iCash').val();
        const strDesc = $('#strDesc').val();
        const strName = $('#strName').val();
        const strAccount = $('#strAccount').val();
        const eStatus = $('#eStatus').val();
        const strShopID = $('#strShopID').val();

        $.ajax({
            url:"/user/request_register",
            type:"POST",
            data: {
                strID:strID,
                strNickname :strNickname,
                strShopID:strShopID,
                eStatus:eStatus,
                strPassword:strPassword,
                strDesc:strDesc,
                strName:strName,
                strAccount:strAccount,
                iPoint:iPoint,
                iCash:iCash,
            },
            dataType: "json",
            success: function (obj) {
                console.log(obj);

                if ( obj.result == 'OK' )
                {
                    alert('완료 되었습니다.');
                    location.reload();
                }
                else
                {
                    if ( obj.error == 'NotExistParent' )
                    {
                        alert('상위 에이전트가 존재 하지 않습니다.');
                    }
                    else if ( obj.error == 'ExistNickname' )
                    {
                        alert('이미 사용중인 닉네임 입니다.');
                    }
                }
            }, 
            error: function () {
                alert("조회 중 오류 발생");
            }
        });
    }

    let RequestCheckID = () => {

        const strID = $('#strID').val();

        $.ajax({
            url:"/agent/request_checkid",
            type:"POST",
            data: {
                strID :strID
            },
            dataType: "json",
            success: function (obj) {
                if ( obj.result == 'OK' )
                {
                    alert('사용 가능한 아이디 입니다.');
                }
                else
                {
                    alert('이미 사용중인 아이디 입니다.');
                }
            }, 
            error: function () {
                alert("조회 중 오류 발생");
            }
        });
    }

    let RequestCheckNickname = () => {

        const strNickname = $('#strNickname').val();

        $.ajax({
            url:"/agent/request_checknickname",
            type:"POST",
            data: {
                strNickname :strNickname
            },
            dataType: "json",
            success: function (obj) {
                if ( obj.result == 'OK' )
                {
                    alert('사용 가능한 닉네임 입니다.');
                }
                else
                {
                    alert('이미 사용중인 닉네임 입니다.');
                }
            }, 
            error: function () {
                alert("조회 중 오류 발생");
            }
        });
    }

    let AddInput = (iAmount) => {

        if ( iAmount == 0 )
        {
            $('#iInputAmount').val(0);
        }
        else
        {
            const value = $('#iInputAmount').val();
            let i = parseInt(value) + parseInt(iAmount);

            $('#iInputAmount').val(i);
        }
    }

    let RequestInout = () => {

        let iAmount = $('#iInputAmount').val();
        let eInoutType = $('#eInoutType').val();

        let object = {iAmount:iAmount, eInoutType:eInoutType, strID:$('#strID').val()};
        console.log(object);
        
        if ( iAmount == 0 || iAmount == '' )
            alert('금액을 입력 하십시오.');

        
        $.ajax({
            url:"/inout/request_inoutgt",
            type:"POST",
            data:object,
            dataType: "json",
            success: function (obj) {
                if ( obj.result == 'OK' )
                {
                    alert('완료 되었습니다.');
                    location.reload();
                }
                else
                {
                    if ( obj.code == 'UnknownUser' )
                    {
                        alert('없는 사용자입니다.');
                    }
                    else if ( obj.code == 'NotEnough' )
                    {
                        alert('대상의 보유금액이 부족합니다.');
                    }
                }
            }, 
            error: function () {
                alert("조회 중 오류 발생");
            }
        });

    }



</script>
